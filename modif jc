___________________________________________________MOT DE PASSE OUBLIE____________________________________________________________________________________

DANS ENTITY/USER, AJOUTER:

#[ORM\Column(length: 100, nullable: true)]
    private ?string $resetToken = null;

PUIS Cmd  php bin/console make:entity --regenerate App
PUIS MIGRATION
___________________________________________________________________________________________________________________________________________________________

ENSUITE DANS SECURITYCONTROLLER, METTRE :

// pour mdp oublié
    #[Route('/oubli-mdp', name: 'forgotten_password')]
    public function forgottenPassword(
        Request $request,
        UserRepository $userRepository,
        TokenGeneratorInterface $tokenGenerator,
        EntityManagerInterface $entitymanager,
        MailerInterface $mail,
    ): Response {
        $form = $this->createForm(ResetPasswordRequestFormType::class);

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // rechercher user par son email
            $user = $userRepository->findOneByEmail($form->get('email')->getData());

            // vérifier si on a un utilisateur
            if ($user) {
                // on génere un token de réinitialisation
                $token = $tokenGenerator->generateToken();
                $user->setResetToken($token);
                $entitymanager->persist($user);
                $entitymanager->flush();

                // on génère un lien de réinitialisation du mot de passe
                $url = $this->generateUrl('reset_pass', ['token' => $token], UrlGeneratorInterface::ABSOLUTE_URL);

                //envoi du mail
                $email = (new TemplatedEmail())
                    ->from('soustraitesmoi@gmail.com')
                    ->to($user->getEmail())
                    ->subject('reini mdp')
                    ->htmlTemplate('emails/password_reset.html.twig')
                    ->context([
                        'user' => $user,
                        'url' => $url,
                    ]);

                $mail->send($email);

                $this->addFlash('success', "l'e-mail a bien été envoyé");
                return $this->redirectToRoute('app_login');
            }
            // si $user est null càd si on a pas cette adresse mail dans la bdd
            $this->addFlash('danger', 'Un problème est survenu');
            return $this->redirectToRoute('app_login');
        }

        return $this->render('security/reset_password_request.html.twig', [
            'requestPassForm' => $form->createView()
        ]);
    }

    //nouvelle route pour le lien de réinitialisation
    #[Route('/oubli-mdp/{token}', name: 'reset_pass')]
    public function resetPass(
        string $token,
        Request $request,
        UserRepository $userRepository,
        EntityManagerInterface $entitymanager,
        UserPasswordHasherInterface $passwordHasher,
    ): Response {
        //on vérifie si on a CE token dans la bdd
        $user = $userRepository->findOneByResetToken($token);

        if ($user) {
            $form = $this->createForm(ResetPasswordFormType::class);

            $form->handleRequest($request);

            if ($form->isSubmitted() && $form->isValid()) {
                //on efface le token
                $user->setResetToken(' ');
                $user->setPassword(
                    $passwordHasher->hashPassword(
                        $user,
                        $form->get('password')->getData()
                    )
                );
                $entitymanager->persist($user);
                $entitymanager->flush();

                $this->addFlash('success', 'Votre mot de passe a bien été modifié');
                return $this->redirectToRoute('app_login');
            }

            return $this->render('security/reset_password.html.twig', [
                'passForm' => $form->createView()
            ]);
        }
        $this->addFlash('danger', 'Jeton invalide');
        return $this->redirectToRoute('app_login');
    }
}

_____________________________________________________________________________________________________________________________________________________

ENSUITE CREER UN FORMULAIRE ResetPasswordFormType.php

<?php

namespace App\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\Regex;
use Symfony\Component\Form\Extension\Core\Type\RepeatedType;

class ResetPasswordFormType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder
        ->add('password', RepeatedType::class, [
            'type' => PasswordType::class,
            'invalid_message' => 'Les mots de passe ne correspondent pas.',
            'options' => ['attr' => ['class' => 'password-field']],
            'required' => true,
            'first_options'  => ['label' => 'saisir votre nouveau mot de passe', 'attr' => ['placeholder' => 'Mot de passe']],
            'second_options' => ['label' => false, 'attr' => ['placeholder' => 'Confirmation mot de passe']],
            'constraints' => [
                new Regex([
                    'pattern'=> '/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$/',
                    'match'=> true,
                    'message'=> 'Veuillez entrer un mot de passe contenant 6 caractères dont 1 majusucle, 1 minuscule et 1 chiffre',
                ]),
            ]
            ]);
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            // Configure your form options here
        ]);
    }
}

_________________________________________________________________________________________________________________________________________________________________

PUIS CREER UN FORMULAIRE ResetPasswordRequestFormType.php

<?php

namespace App\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class ResetPasswordRequestFormType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder
            ->add('email' , EmailType::class, [
                'label' => 'saisir votre e-mail',
                'attr' => [
                    'placeholder' => 'exemple@email.fr'
                ]
            ]) 
        ;
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            // Configure your form options here
        ]);
    }
}

___________________________________________________________________________________________________________________________________________________________________

PUIS DANS TEMPLATE CREER UN DOSSIER emails PUIS UN FICHIER password_request.html.twig, Y METTRE :

<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
	</head>
	<body>
		<p>Bonjour {{ user.firstName }},</p>
		<p>pour réinitialiser votre mot de passe, veuillez cliquer sur le lien suivant :
			<a href="{{ url|raw }}">{{ url|raw }}</a>
		</p>
		<p>Merci</p>
	</body>
</html>

___________________________________________________________________________________________________________________________________________________________________

DANS TEMPLATE SECURITY:
CREER UN FICHIER reset_password_request.html.twig, Y METTRE:

{% extends 'base.html.twig' %}

{% block title %}Réinitialisation du mot de passe
{% endblock %}

{% block body %}
	<main class="container my-3">
		<section class="row">
			<div class="col">
            <h1>Réinitialisation du mot de passe</h1>
            {{form_start(requestPassForm)}}
            {{ form_row(requestPassForm.email)}}
            <button type="submit" class="btn btn-dark">Valider</button>
            {{form_end(requestPassForm)}}
            </div>
		</section>
	</main>
{% endblock %}
__________________________________________________________________________________________________________________________________________________________________

DANS TEMPLATE SECURITY, CREER UN FICHIER reset_password.html.twig, Y METTRE:

{% extends 'base.html.twig' %}

{% block title %}Réinitialisation du mot de passe
{% endblock %}

{% block body %}
	<main class="container my-3">
		<section class="row">
			<div class="col">
            <h1>Réinitialisation du mot de passe</h1>
            {{form_start(passForm)}}
            {{ form_row(passForm.password)}}
            <button type="submit" class="btn btn-dark">Valider</button>
            {{form_end(passForm)}}
            </div>
		</section>
	</main>
{% endblock %}

________________________________________________________________________________________________________________________________________________________________

DANS login.html.twig , DECOMMENTER (ligne 28/29? LE INPUT JUSTE EN DESSOUS DE "MDP OUBLIE") :

<input
				type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
        
        
        
        
_________________________________________________POUR LES MESSAGES ADDFLASH________________________________________________________________________________________

DANS TEMPLATE/PARTIALS CREER UN FICHIER flash.html.twig

{% for label, messages in app.flashes %}
	{% for message in messages %}
		<div class="alert alert-{{ label }} alert-dismissible" role="alert">
			<button type="button" class="btn-close" data-bs-dismiss="alert" arial-label="Close"></button>
			<div class="alert-message">
				{{ message|raw}}
			</div>
		</div>
	{% endfor %}
{% endfor %}

DANS base.html.twig ENTRE <body> </body> METTRE,

{% include "partials/flash.html.twig" %}
